# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# --- webUI ---
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
/webUI/*.suo
/webUI/*.user
/webUI/*.userosscache
/webUI/*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
/webUI/*.userprefs

# Build results
/webUI/[Dd]ebug/
/webUI/[Dd]ebugPublic/
/webUI/[Rr]elease/
/webUI/[Rr]eleases/
/webUI/x64/
/webUI/x86/
/webUI/bld/
/webUI/[Bb]in/
/webUI/[Oo]bj/
/webUI/[Ll]og/

# Visual Studio 2015 cache/options directory
/webUI/.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
/webUI/[Tt]est[Rr]esult*/
/webUI/[Bb]uild[Ll]og.*

# NUNIT
/webUI/*.VisualState.xml
/webUI/TestResult.xml

# Build Results of an ATL Project
/webUI/[Dd]ebugPS/
/webUI/[Rr]eleasePS/
/webUI/dlldata.c

# DNX
/webUI/project.lock.json
/webUI/project.fragment.lock.json
/webUI/artifacts/

/webUI/*_i.c
/webUI/*_p.c
/webUI/*_i.h
/webUI/*.ilk
/webUI/*.meta
/webUI/*.obj
/webUI/*.pch
/webUI/*.pdb
/webUI/*.pgc
/webUI/*.pgd
/webUI/*.rsp
/webUI/*.sbr
/webUI/*.tlb
/webUI/*.tli
/webUI/*.tlh
/webUI/*.tmp
/webUI/*.tmp_proj
/webUI/*.log
/webUI/*.vspscc
/webUI/*.vssscc
/webUI/.builds
/webUI/*.pidb
/webUI/*.svclog
/webUI/*.scc

# Chutzpah Test files
/webUI/_Chutzpah*

# Visual C++ cache files
/webUI/ipch/
/webUI/*.aps
/webUI/*.ncb
/webUI/*.opendb
/webUI/*.opensdf
/webUI/*.sdf
/webUI/*.cachefile
/webUI/*.VC.db
/webUI/*.VC.VC.opendb

# Visual Studio profiler
/webUI/*.psess
/webUI/*.vsp
/webUI/*.vspx
/webUI/*.sap

# TFS 2012 Local Workspace
/webUI/$tf/

# Guidance Automation Toolkit
/webUI/*.gpState

# ReSharper is a .NET coding add-in
/webUI/_ReSharper*/
/webUI/*.[Rr]e[Ss]harper
/webUI/*.DotSettings.user

# JustCode is a .NET coding add-in
/webUI/.JustCode

# TeamCity is a build add-in
/webUI/_TeamCity*

# DotCover is a Code Coverage Tool
/webUI/*.dotCover

# NCrunch
/webUI/_NCrunch_*
/webUI/.*crunch*.local.xml
/webUI/nCrunchTemp_*

# MightyMoose
/webUI/*.mm.*
/webUI/AutoTest.Net/

# Web workbench (sass)
/webUI/.sass-cache/

# Installshield output folder
/webUI/[Ee]xpress/

# DocProject is a documentation generator add-in
/webUI/DocProject/buildhelp/
/webUI/DocProject/Help/*.HxT
/webUI/DocProject/Help/*.HxC
/webUI/DocProject/Help/*.hhc
/webUI/DocProject/Help/*.hhk
/webUI/DocProject/Help/*.hhp
/webUI/DocProject/Help/Html2
/webUI/DocProject/Help/html

# Click-Once directory
/webUI/publish/

# Publish Web Output
/webUI/*.[Pp]ublish.xml
/webUI/*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
#*.pubxml
/webUI/*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
/webUI/PublishScripts/

# NuGet Packages
/webUI/*.nupkg
# The packages folder can be ignored because of Package Restore
/webUI/**/packages/*
# except build/, which is used as an MSBuild target.
/webUI/!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
/webUI/*.nuget.props
/webUI/*.nuget.targets

# Microsoft Azure Build Output
/webUI/csx/
/webUI/*.build.csdef

# Microsoft Azure Emulator
/webUI/ecf/
/webUI/rcf/

# Windows Store app package directories and files
/webUI/AppPackages/
/webUI/BundleArtifacts/
/webUI/Package.StoreAssociation.xml
/webUI/_pkginfo.txt

# Visual Studio cache files
# files ending in .cache can be ignored
/webUI/*.[Cc]ache
# but keep track of directories ending in .cache
/webUI/!*.[Cc]ache/

# Others
/webUI/ClientBin/
/webUI/~$*
/webUI/*~
/webUI/*.dbmdl
/webUI/*.dbproj.schemaview
/webUI/*.jfm
/webUI/*.pfx
/webUI/*.publishsettings
/webUI/node_modules/
/webUI/orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
/webUI/Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
/webUI/_UpgradeReport_Files/
/webUI/Backup*/
/webUI/UpgradeLog*.XML
/webUI/UpgradeLog*.htm

# SQL Server files
/webUI/*.mdf
/webUI/*.ldf

# Business Intelligence projects
/webUI/*.rdl.data
/webUI/*.bim.layout
/webUI/*.bim_*.settings

# Microsoft Fakes
/webUI/FakesAssemblies/

# GhostDoc plugin setting file
/webUI/*.GhostDoc.xml

# Node.js Tools for Visual Studio
/webUI/.ntvs_analysis.dat

# Visual Studio 6 build log
/webUI/*.plg

# Visual Studio 6 workspace options file
/webUI/*.opt

# Visual Studio LightSwitch build output
/webUI/**/*.HTMLClient/GeneratedArtifacts
/webUI/**/*.DesktopClient/GeneratedArtifacts
/webUI/**/*.DesktopClient/ModelManifest.xml
/webUI/**/*.Server/GeneratedArtifacts
/webUI/**/*.Server/ModelManifest.xml
/webUI/_Pvt_Extensions

# Paket dependency manager
/webUI/.paket/paket.exe
/webUI/paket-files/

# FAKE - F# Make
/webUI/.fake/

# JetBrains Rider
/webUI/.idea/
/webUI/*.sln.iml

# CodeRush
/webUI/.cr/

# Python Tools for Visual Studio (PTVS)
/webUI/__pycache__/
/webUI/*.pyc